/*
 * Opsgenie REST API
 *
 * Opsgenie OpenAPI Specification
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateScheduleOverridePayload {
    /// A user defined identifier for the override
    #[serde(rename = "alias", skip_serializing_if = "Option::is_none")]
    pub alias: Option<String>,
    #[serde(rename = "user")]
    pub user: Box<crate::models::Recipient>,
    /// Time for override starting
    #[serde(rename = "startDate")]
    pub start_date: String,
    /// Time for override ending
    #[serde(rename = "endDate")]
    pub end_date: String,
    /// Identifier (id or name) of rotations that override will apply. When it's set, only specified schedule rotations will be overridden
    #[serde(rename = "rotations", skip_serializing_if = "Option::is_none")]
    pub rotations: Option<Vec<crate::models::ScheduleOverrideRotation>>,
}

impl CreateScheduleOverridePayload {
    pub fn new(user: crate::models::Recipient, start_date: String, end_date: String) -> CreateScheduleOverridePayload {
        CreateScheduleOverridePayload {
            alias: None,
            user: Box::new(user),
            start_date,
            end_date,
            rotations: None,
        }
    }
}


