/*
 * Opsgenie REST API
 *
 * Opsgenie OpenAPI Specification
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct TimelinePeriod {
    #[serde(rename = "startDate", skip_serializing_if = "Option::is_none")]
    pub start_date: Option<String>,
    #[serde(rename = "endDate", skip_serializing_if = "Option::is_none")]
    pub end_date: Option<String>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub _type: Option<String>,
    /// Only used by 'forwarding' period types
    #[serde(rename = "fromUser", skip_serializing_if = "Option::is_none")]
    pub from_user: Option<String>,
    #[serde(rename = "recipient", skip_serializing_if = "Option::is_none")]
    pub recipient: Option<Box<crate::models::TimelineRecipient>>,
    /// Only used by 'historical' period types
    #[serde(rename = "flattenedRecipients", skip_serializing_if = "Option::is_none")]
    pub flattened_recipients: Option<Vec<crate::models::TimelineRecipient>>,
}

impl TimelinePeriod {
    pub fn new() -> TimelinePeriod {
        TimelinePeriod {
            start_date: None,
            end_date: None,
            _type: None,
            from_user: None,
            recipient: None,
            flattened_recipients: None,
        }
    }
}


